version: '3.3'

services:
  web:
    build: ./
    volumes:
      - ./:/usr/src/app/
    expose:
      - 8000
    env_file:
      - env/.env
    restart: unless-stopped
    networks:
      - app-network

  db:
    image: postgres:12.0-alpine
    volumes:
      - postgres_volume:/var/lib/postgresql/data/
    env_file:
      - env/postgres.env
    restart: unless-stopped
    networks:
      - app-network

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    environment:
      - DOMAIN=${DOMAIN}
    volumes:
      - ./static/:/static
      - ./media/:/media
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - ./dhparam:/etc/ssl/certs
    depends_on:
      - web
      - db
    ports:
      - 80:80
      - 443:443
    restart: unless-stopped
    networks:
      - app-network

  certbot:
    image: certbot/certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
    depends_on:
      - nginx
    env_file:
      - env/compose.env
    command: >
      certonly --webroot --webroot-path=/
        --email example@mail.com
        --agree-tos --no-eff-email --staging
        -d ${DOMAIN}

volumes:
  postgres_volume:
  certbot-etc:
  certbot-var:

networks:
  app-network:
    driver: bridge
